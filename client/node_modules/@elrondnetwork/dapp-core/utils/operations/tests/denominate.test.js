"use strict";import{b as i}from"../../../__chunks__/chunk-FLWFNXC4.js";import"../../../__chunks__/chunk-WYP7B4XN.js";import"../../../__chunks__/chunk-3AQ4ZGVW.js";import"../../../__chunks__/chunk-4FKDKMMH.js";import"../../../__chunks__/chunk-ORTTQBWP.js";import"../../../__chunks__/chunk-NM3ZDNF7.js";import"../../../__chunks__/chunk-743O3BY4.js";import"../../../__chunks__/chunk-OZ6SMI6T.js";import"../../../__chunks__/chunk-SWLQGVF6.js";import"../../../__chunks__/chunk-2VF5M42I.js";import"../../../__chunks__/chunk-PWVTB4OT.js";import"../../../__chunks__/chunk-DICYH33Y.js";import{g as m}from"../../../__chunks__/chunk-YMWLFVZR.js";m();describe("denomination 4,4",()=>{let e={"9999999999999999999999990000":"999,999,999,999,999,999,999,999",0:"0"},a=4,c=4;for(let t=0;t<Object.keys(e).length;t++){let o=Object.keys(e)[t],s=e[o];it(`denominate ${o} -> ${s}`,()=>{let n=i({input:o,denomination:a,decimals:c,showLastNonZeroDecimal:!1,addCommas:!0});expect(n).toBe(s)})}});describe("denomination 8,4",()=>{let e={"9999999999999999999899996000":"99,999,999,999,999,999,998.9999",0:"0",1e4:"0.0001"},a=8,c=4;for(let t=0;t<Object.keys(e).length;t++){let o=Object.keys(e)[t],s=e[o];it(`denominate ${o} -> ${s}`,()=>{let n=i({input:o,denomination:a,decimals:c,showLastNonZeroDecimal:!1,addCommas:!0});expect(n).toBe(s)})}});describe("denomination 0,0",()=>{let e={350:"350"},a=0,c=0;for(let t=0;t<Object.keys(e).length;t++){let o=Object.keys(e)[t],s=e[o];it(`denominate ${o} -> ${s}`,()=>{let n=i({input:o,denomination:a,decimals:c,showLastNonZeroDecimal:!1});expect(n).toBe(s)})}});describe("denomination 4,8,true",()=>{let e={"12345678901234567890123":"123,456,789,012,345.67890123"},a=8,c=4;for(let t=0;t<Object.keys(e).length;t++){let o=Object.keys(e)[t],s=e[o];it(`denominate ${o} -> ${s}`,()=>{let n=i({input:o,denomination:a,decimals:c,showLastNonZeroDecimal:!0,addCommas:!0});expect(n).toBe(s)})}});describe("denomination 18,0,true",()=>{let e={"102000000000000000":"0.102","100000000000000000":"0.1","1000000000000000000":"1"},a=18,c=0;for(let t=0;t<Object.keys(e).length;t++){let o=Object.keys(e)[t],s=e[o];it(`denominate ${o} -> ${s}`,()=>{let n=i({input:o,denomination:a,decimals:c,showLastNonZeroDecimal:!0});expect(n).toBe(s)})}});describe("denomination float throws error",()=>{let e={"0.015":"Throws error","01000000000000000000":"Throws error"},a=18,c=4;for(let t=0;t<Object.keys(e).length;t++){let o=Object.keys(e)[t],s=e[o];it(`denominate ${o} -> ${s}`,()=>{let n="";try{i({input:o,denomination:a,decimals:c,addCommas:!1,showLastNonZeroDecimal:!0}),expect(n).toBeInstanceOf(Error)}catch(r){n=r,expect(n).toBeInstanceOf(Error),expect(r).toHaveProperty("message","Invalid input")}})}});describe("denomination negative",()=>{let e={"-922506751086064008":"-0.922506751086064008","-578345000000000000000":"-578.3450","-1578345000000000000000":"-1,578.3450","-3456000000000000000":"-3.4560"},a=18,c=4;for(let t=0;t<Object.keys(e).length;t++){let o=Object.keys(e)[t],s=e[o];it(`denominate ${o} -> ${s}`,()=>{let n=i({input:o,denomination:a,decimals:c,showLastNonZeroDecimal:!0,addCommas:!0});expect(n).toBe(s)})}});describe("denomination single tests",()=>{it("should show less than if decimal amount is too low",()=>{let e=i({input:1e14 .toString(),decimals:2,showIsLessThanDecimalsLabel:!0,showLastNonZeroDecimal:!1});expect(e).toBe("<0.01")}),it("should not show decimals when result is below 1",()=>{let e=i({input:1e14 .toString(),showLastNonZeroDecimal:!1,decimals:2});expect(e).toBe("0")}),it("should show zero decimals for integers with decimal amount too low",()=>{let e=i({input:["1","000","000","001","000","000","000","000"].join(""),decimals:2,showLastNonZeroDecimal:!1});expect(e).toBe("1000.00")}),it("should show a valid number if showLastNonZeroDecimal is set",()=>{let e=i({input:1e9 .toString(),decimals:4,showLastNonZeroDecimal:!0});expect(e).toBe("0.000000001")}),it("should show remove decimals and not add commas",()=>{let e=i({input:"369884288127092846270928",decimals:4,showLastNonZeroDecimal:!1,addCommas:!1});expect(e).toBe("369884.2881")}),it("should not add . at the end for 0 decimals",()=>{let e=i({input:"369884288127092846270928",decimals:0,showLastNonZeroDecimal:!1,addCommas:!1});expect(e).toBe("369884")})});
//# sourceMappingURL=denominate.test.js.map
