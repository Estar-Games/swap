{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CodeMetadata = void 0;\n/**\n * The metadata of a Smart Contract, as an abstraction.\n */\n\nclass CodeMetadata {\n  /**\n   * Creates a metadata object. By default, set the `upgradeable` attribute, and uset all others.\n   *\n   * @param upgradeable Whether the contract is upgradeable\n   * @param readable Whether other contracts can read this contract's data (without calling one of its pure functions)\n   * @param payable Whether the contract is payable\n   * @param payableBySc Whether the contract is payable by other smart contracts\n   */\n  constructor() {\n    let upgradeable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    let readable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let payable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let payableBySc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    this.upgradeable = upgradeable;\n    this.readable = readable;\n    this.payable = payable;\n    this.payableBySc = payableBySc;\n  }\n  /**\n   * Adjust the metadata (the `upgradeable` attribute), when preparing the deployment transaction.\n   */\n\n\n  toggleUpgradeable(value) {\n    this.upgradeable = value;\n  }\n  /**\n   * Adjust the metadata (the `readable` attribute), when preparing the deployment transaction.\n   */\n\n\n  toggleReadable(value) {\n    this.readable = value;\n  }\n  /**\n   * Adjust the metadata (the `payable` attribute), when preparing the deployment transaction.\n   */\n\n\n  togglePayable(value) {\n    this.payable = value;\n  }\n  /**\n   * Adjust the metadata (the `payableBySc` attribute), when preparing the deployment transaction.\n   */\n\n\n  togglePayableBySc(value) {\n    this.payableBySc = value;\n  }\n  /**\n   * Converts the metadata to the protocol-friendly representation.\n   */\n\n\n  toBuffer() {\n    let byteZero = 0;\n    let byteOne = 0;\n\n    if (this.upgradeable) {\n      byteZero |= ByteZero.Upgradeable;\n    }\n\n    if (this.readable) {\n      byteZero |= ByteZero.Readable;\n    }\n\n    if (this.payable) {\n      byteOne |= ByteOne.Payable;\n    }\n\n    if (this.payableBySc) {\n      byteOne |= ByteOne.PayableBySc;\n    }\n\n    return Buffer.from([byteZero, byteOne]);\n  }\n  /**\n   * Converts the metadata to a hex-encoded string.\n   */\n\n\n  toString() {\n    return this.toBuffer().toString(\"hex\");\n  }\n  /**\n   * Converts the metadata to a pretty, plain JavaScript object.\n   */\n\n\n  toJSON() {\n    return {\n      upgradeable: this.upgradeable,\n      readable: this.readable,\n      payable: this.payable,\n      payableBySc: this.payableBySc\n    };\n  }\n\n  equals(other) {\n    return this.upgradeable == other.upgradeable && this.readable == other.readable && this.payable == other.payable && this.payableBySc == other.payableBySc;\n  }\n\n}\n\nexports.CodeMetadata = CodeMetadata;\nvar ByteZero;\n\n(function (ByteZero) {\n  ByteZero[ByteZero[\"Upgradeable\"] = 1] = \"Upgradeable\";\n  ByteZero[ByteZero[\"Reserved2\"] = 2] = \"Reserved2\";\n  ByteZero[ByteZero[\"Readable\"] = 4] = \"Readable\";\n})(ByteZero || (ByteZero = {}));\n\nvar ByteOne;\n\n(function (ByteOne) {\n  ByteOne[ByteOne[\"Reserved1\"] = 1] = \"Reserved1\";\n  ByteOne[ByteOne[\"Payable\"] = 2] = \"Payable\";\n  ByteOne[ByteOne[\"PayableBySc\"] = 4] = \"PayableBySc\";\n})(ByteOne || (ByteOne = {}));","map":{"version":3,"mappings":";;;;;;AAAA;;;;AAGA,MAAaA,YAAb,CAAyB;EAMrB;;;;;;;;EAQAC,cAA0H;IAAA,IAA9GC,WAA8G,uEAAvF,IAAuF;IAAA,IAAjFC,QAAiF,uEAA7D,KAA6D;IAAA,IAAtDC,OAAsD,uEAAnC,KAAmC;IAAA,IAA5BC,WAA4B,uEAAL,KAAK;IACtH,KAAKH,WAAL,GAAmBA,WAAnB;IACA,KAAKC,QAAL,GAAgBA,QAAhB;IACA,KAAKC,OAAL,GAAeA,OAAf;IACA,KAAKC,WAAL,GAAmBA,WAAnB;EACH;EAED;;;;;EAGAC,iBAAiB,CAACC,KAAD,EAAe;IAC5B,KAAKL,WAAL,GAAmBK,KAAnB;EACH;EAED;;;;;EAGAC,cAAc,CAACD,KAAD,EAAe;IACzB,KAAKJ,QAAL,GAAgBI,KAAhB;EACH;EAED;;;;;EAGAE,aAAa,CAACF,KAAD,EAAe;IACxB,KAAKH,OAAL,GAAeG,KAAf;EACH;EAED;;;;;EAGAG,iBAAiB,CAACH,KAAD,EAAe;IAC5B,KAAKF,WAAL,GAAmBE,KAAnB;EACH;EAED;;;;;EAGAI,QAAQ;IACJ,IAAIC,QAAQ,GAAG,CAAf;IACA,IAAIC,OAAO,GAAG,CAAd;;IAEA,IAAI,KAAKX,WAAT,EAAsB;MAClBU,QAAQ,IAAIE,QAAQ,CAACC,WAArB;IACH;;IACD,IAAI,KAAKZ,QAAT,EAAmB;MACfS,QAAQ,IAAIE,QAAQ,CAACE,QAArB;IACH;;IACD,IAAI,KAAKZ,OAAT,EAAkB;MACdS,OAAO,IAAII,OAAO,CAACC,OAAnB;IACH;;IACD,IAAI,KAAKb,WAAT,EAAsB;MAClBQ,OAAO,IAAII,OAAO,CAACE,WAAnB;IACH;;IAED,OAAOC,MAAM,CAACC,IAAP,CAAY,CAACT,QAAD,EAAWC,OAAX,CAAZ,CAAP;EACH;EAED;;;;;EAGAS,QAAQ;IACJ,OAAO,KAAKX,QAAL,GAAgBW,QAAhB,CAAyB,KAAzB,CAAP;EACH;EAED;;;;;EAGAC,MAAM;IACF,OAAO;MACHrB,WAAW,EAAE,KAAKA,WADf;MAEHC,QAAQ,EAAE,KAAKA,QAFZ;MAGHC,OAAO,EAAE,KAAKA,OAHX;MAIHC,WAAW,EAAE,KAAKA;IAJf,CAAP;EAMH;;EAEDmB,MAAM,CAACC,KAAD,EAAoB;IACtB,OAAO,KAAKvB,WAAL,IAAoBuB,KAAK,CAACvB,WAA1B,IACH,KAAKC,QAAL,IAAiBsB,KAAK,CAACtB,QADpB,IAEH,KAAKC,OAAL,IAAgBqB,KAAK,CAACrB,OAFnB,IAGH,KAAKC,WAAL,IAAoBoB,KAAK,CAACpB,WAH9B;EAIH;;AAhGoB;;AAAzBqB;AAmGA,IAAKZ,QAAL;;AAAA,WAAKA,QAAL,EAAa;EACTA;EACAA;EACAA;AACH,CAJD,EAAKA,QAAQ,KAARA,QAAQ,MAAb;;AAMA,IAAKG,OAAL;;AAAA,WAAKA,OAAL,EAAY;EACRA;EACAA;EACAA;AACH,CAJD,EAAKA,OAAO,KAAPA,OAAO,MAAZ","names":["CodeMetadata","constructor","upgradeable","readable","payable","payableBySc","toggleUpgradeable","value","toggleReadable","togglePayable","togglePayableBySc","toBuffer","byteZero","byteOne","ByteZero","Upgradeable","Readable","ByteOne","Payable","PayableBySc","Buffer","from","toString","toJSON","equals","other","exports"],"sourceRoot":"","sources":["../../src/smartcontracts/codeMetadata.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}