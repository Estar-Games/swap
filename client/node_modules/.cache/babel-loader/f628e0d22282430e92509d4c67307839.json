{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringValue = exports.StringType = void 0;\n\nconst types_1 = require(\"./types\");\n\nclass StringType extends types_1.PrimitiveType {\n  constructor() {\n    super(\"utf-8 string\");\n  }\n\n  getClassName() {\n    return StringType.ClassName;\n  }\n\n}\n\nexports.StringType = StringType;\nStringType.ClassName = \"StringType\";\n\nclass StringValue extends types_1.PrimitiveValue {\n  constructor(value) {\n    super(new StringType());\n    this.value = value;\n  }\n\n  getClassName() {\n    return StringValue.ClassName;\n  }\n  /**\n   * Creates a StringValue from a utf-8 string.\n   */\n\n\n  static fromUTF8(value) {\n    return new StringValue(value);\n  }\n  /**\n   * Creates a StringValue from a hex-encoded string.\n   */\n\n\n  static fromHex(value) {\n    let decodedValue = Buffer.from(value, \"hex\").toString();\n    return new StringValue(decodedValue);\n  }\n\n  getLength() {\n    return this.value.length;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   */\n\n\n  equals(other) {\n    return this.value === other.value;\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.StringValue = StringValue;\nStringValue.ClassName = \"StringValue\";","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,MAAaA,UAAb,SAAgCC,qBAAhC,CAA6C;EAGzCC;IACI,MAAM,cAAN;EACH;;EAEDC,YAAY;IACR,OAAOH,UAAU,CAACI,SAAlB;EACH;;AATwC;;AAA7CC;AACWL,uBAAY,YAAZ;;AAWX,MAAaM,WAAb,SAAiCL,sBAAjC,CAA+C;EAI3CC,YAAYK,KAAZ,EAAyB;IACrB,MAAM,IAAIP,UAAJ,EAAN;IACA,KAAKO,KAAL,GAAaA,KAAb;EACH;;EAEDJ,YAAY;IACR,OAAOG,WAAW,CAACF,SAAnB;EACH;EAED;;;;;EAGe,OAARI,QAAQ,CAACD,KAAD,EAAc;IACzB,OAAO,IAAID,WAAJ,CAAgBC,KAAhB,CAAP;EACH;EAED;;;;;EAGc,OAAPE,OAAO,CAACF,KAAD,EAAc;IACxB,IAAIG,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAZ,EAAmB,KAAnB,EAA0BM,QAA1B,EAAnB;IACA,OAAO,IAAIP,WAAJ,CAAgBI,YAAhB,CAAP;EACH;;EAEDI,SAAS;IACL,OAAO,KAAKP,KAAL,CAAWQ,MAAlB;EACH;EAED;;;;;EAGAC,MAAM,CAACC,KAAD,EAAmB;IACrB,OAAO,KAAKV,KAAL,KAAeU,KAAK,CAACV,KAA5B;EACH;;EAEDW,OAAO;IACH,OAAO,KAAKX,KAAZ;EACH;;AAzC0C;;AAA/CF;AACWC,wBAAY,aAAZ","names":["StringType","types_1","constructor","getClassName","ClassName","exports","StringValue","value","fromUTF8","fromHex","decodedValue","Buffer","from","toString","getLength","length","equals","other","valueOf"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/string.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}