{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionOptions = exports.TransactionVersion = void 0;\n\nconst errors = __importStar(require(\"./errors\"));\n\nconst constants_1 = require(\"./constants\");\n\nclass TransactionVersion {\n  /**\n   * Creates a TransactionVersion object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (value < 1) {\n      throw new errors.ErrTransactionVersionInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a TransactionVersion object with the default version setting\n   */\n\n\n  static withDefaultVersion() {\n    return new TransactionVersion(constants_1.TRANSACTION_VERSION_DEFAULT);\n  }\n  /**\n   * Creates a TransactionVersion object with the VERSION setting for hash signing\n   */\n\n\n  static withTxHashSignVersion() {\n    return new TransactionVersion(constants_1.TRANSACTION_VERSION_TX_HASH_SIGN);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.TransactionVersion = TransactionVersion;\n\nclass TransactionOptions {\n  /**\n   * Creates a TransactionOptions object given a value.\n   */\n  constructor(value) {\n    value = Number(value);\n\n    if (value < 0) {\n      throw new errors.ErrTransactionOptionsInvalid(value);\n    }\n\n    this.value = value;\n  }\n  /**\n   * Creates a TransactionOptions object with the default options setting\n   */\n\n\n  static withDefaultOptions() {\n    return new TransactionOptions(constants_1.TRANSACTION_OPTIONS_DEFAULT);\n  }\n  /**\n   * Created a TransactionsOptions object with the setting for hash signing\n   */\n\n\n  static withTxHashSignOptions() {\n    return new TransactionOptions(constants_1.TRANSACTION_OPTIONS_TX_HASH_SIGN);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.TransactionOptions = TransactionOptions;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAMA,MAAaA,kBAAb,CAA+B;EAM3B;;;EAGAC,YAAYC,KAAZ,EAAyB;IACrBA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAd;;IAEA,IAAIA,KAAK,GAAG,CAAZ,EAAe;MACX,MAAM,IAAIE,MAAM,CAACC,4BAAX,CAAwCH,KAAxC,CAAN;IACH;;IAED,KAAKA,KAAL,GAAaA,KAAb;EACH;EAED;;;;;EAGyB,OAAlBI,kBAAkB;IACrB,OAAO,IAAIN,kBAAJ,CAAuBO,uCAAvB,CAAP;EACH;EAED;;;;;EAG4B,OAArBC,qBAAqB;IACxB,OAAO,IAAIR,kBAAJ,CAAuBO,4CAAvB,CAAP;EACH;;EAEDE,OAAO;IACH,OAAO,KAAKP,KAAZ;EACH;;AAnC0B;;AAA/BQ;;AAsCA,MAAaC,kBAAb,CAA+B;EAM3B;;;EAGAV,YAAYC,KAAZ,EAAyB;IACrBA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAd;;IAEA,IAAIA,KAAK,GAAG,CAAZ,EAAe;MACX,MAAM,IAAIE,MAAM,CAACQ,4BAAX,CAAwCV,KAAxC,CAAN;IACH;;IAED,KAAKA,KAAL,GAAaA,KAAb;EACH;EAED;;;;;EAGyB,OAAlBW,kBAAkB;IACrB,OAAO,IAAIF,kBAAJ,CAAuBJ,uCAAvB,CAAP;EACH;EAED;;;;;EAG4B,OAArBO,qBAAqB;IACxB,OAAO,IAAIH,kBAAJ,CAAuBJ,4CAAvB,CAAP;EACH;;EAEDE,OAAO;IACH,OAAO,KAAKP,KAAZ;EACH;;AAnC0B;;AAA/BQ","names":["TransactionVersion","constructor","value","Number","errors","ErrTransactionVersionInvalid","withDefaultVersion","constants_1","withTxHashSignVersion","valueOf","exports","TransactionOptions","ErrTransactionOptionsInvalid","withDefaultOptions","withTxHashSignOptions"],"sourceRoot":"","sources":["../src/networkParams.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}