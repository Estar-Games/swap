{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WalletProvider = void 0;\n\nconst qs_1 = __importDefault(require(\"qs\"));\n\nconst constants_1 = require(\"./constants\");\n\nconst errors_1 = require(\"./errors\");\n\nconst plainSignedTransaction_1 = require(\"./plainSignedTransaction\");\n\nclass WalletProvider {\n  /**\n   * Creates a new WalletProvider\n   * @param walletURL\n   */\n  constructor(walletURL) {\n    this.walletUrl = walletURL;\n  }\n  /**\n   * Fetches the login hook url and redirects the client to the wallet login.\n   */\n\n\n  login(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const redirectUrl = this.buildWalletUrl({\n        endpoint: constants_1.WALLET_PROVIDER_CONNECT_URL,\n        callbackUrl: options === null || options === void 0 ? void 0 : options.callbackUrl,\n        params: {\n          token: options === null || options === void 0 ? void 0 : options.token\n        }\n      });\n      yield this.redirect(redirectUrl, options === null || options === void 0 ? void 0 : options.redirectDelayMilliseconds);\n      return redirectUrl;\n    });\n  }\n\n  redirect(url, delayMilliseconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (delayMilliseconds) {\n        yield this.redirectLater(url, delayMilliseconds);\n      } else {\n        this.redirectImmediately(url);\n      }\n    });\n  }\n\n  redirectImmediately(url) {\n    window.location.href = url;\n  }\n\n  redirectLater(url, delayMilliseconds) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield new Promise(resolve => {\n        setTimeout(() => {\n          window.location.href = url;\n          resolve(true);\n        }, delayMilliseconds);\n      });\n    });\n  }\n  /**\n  * Fetches the logout hook url and redirects the client to the wallet logout.\n  */\n\n\n  logout(options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const redirectUrl = this.buildWalletUrl({\n        endpoint: constants_1.WALLET_PROVIDER_DISCONNECT_URL,\n        callbackUrl: options === null || options === void 0 ? void 0 : options.callbackUrl\n      });\n      yield this.redirect(redirectUrl, options === null || options === void 0 ? void 0 : options.redirectDelayMilliseconds);\n      return true;\n    });\n  }\n  /**\n   * Packs an array of {$link Transaction} and redirects to the correct transaction sigining hook\n   *\n   * @param transactions\n   * @param options\n   */\n\n\n  signTransactions(transactions, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const jsonToSend = {};\n      transactions.map(tx => {\n        let plainTx = WalletProvider.prepareWalletTransaction(tx);\n\n        for (let txProp in plainTx) {\n          if (plainTx.hasOwnProperty(txProp) && !jsonToSend.hasOwnProperty(txProp)) {\n            jsonToSend[txProp] = [];\n          }\n\n          jsonToSend[txProp].push(plainTx[txProp]);\n        }\n      });\n      const redirectUrl = this.buildWalletUrl({\n        endpoint: constants_1.WALLET_PROVIDER_SIGN_TRANSACTION_URL,\n        callbackUrl: options === null || options === void 0 ? void 0 : options.callbackUrl,\n        params: jsonToSend\n      });\n      window.location.href = redirectUrl;\n    });\n  }\n  /**\n   * Packs a {@link Transaction} and fetches correct redirect URL from the wallet API. Then redirects\n   *   the client to the sign transaction hook\n   * @param transaction\n   * @param options\n   */\n\n\n  signTransaction(transaction, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      yield this.signTransactions([transaction], options);\n    });\n  }\n\n  getTransactionsFromWalletUrl() {\n    const urlParams = qs_1.default.parse(window.location.search.slice(1));\n\n    if (!WalletProvider.isTxSignReturnSuccess(urlParams)) {\n      return [];\n    }\n\n    return this.getTxSignReturnValue(urlParams);\n  }\n\n  static isTxSignReturnSuccess(urlParams) {\n    return urlParams.hasOwnProperty(constants_1.WALLET_PROVIDER_CALLBACK_PARAM) && urlParams[constants_1.WALLET_PROVIDER_CALLBACK_PARAM] === constants_1.WALLET_PROVIDER_CALLBACK_PARAM_TX_SIGNED;\n  }\n\n  getTxSignReturnValue(urlParams) {\n    // \"options\" property is optional (it isn't always received from the Web Wallet)\n    const expectedProps = [\"nonce\", \"value\", \"receiver\", \"sender\", \"gasPrice\", \"gasLimit\", \"data\", \"chainID\", \"version\", \"signature\"];\n\n    for (let txProp of expectedProps) {\n      if (!urlParams[txProp] || !Array.isArray(urlParams[txProp])) {\n        throw new errors_1.ErrInvalidTxSignReturnValue();\n      }\n    }\n\n    const expectedLength = urlParams[\"nonce\"].length;\n\n    for (let txProp of expectedProps) {\n      if (urlParams[txProp].length !== expectedLength) {\n        throw new errors_1.ErrInvalidTxSignReturnValue();\n      }\n    }\n\n    const transactions = [];\n\n    for (let i = 0; i < expectedLength; i++) {\n      let plainSignedTransaction = new plainSignedTransaction_1.PlainSignedTransaction(Object.assign(Object.assign({\n        nonce: parseInt(urlParams[\"nonce\"][i]),\n        value: urlParams[\"value\"][i],\n        receiver: urlParams[\"receiver\"][i],\n        sender: urlParams[\"sender\"][i],\n        gasPrice: parseInt(urlParams[\"gasPrice\"][i]),\n        gasLimit: parseInt(urlParams[\"gasLimit\"][i]),\n        data: urlParams[\"data\"][i],\n        chainID: urlParams[\"chainID\"][i],\n        version: parseInt(urlParams[\"version\"][i])\n      }, urlParams[\"options\"] && urlParams[\"options\"][i] ? {\n        options: parseInt(urlParams[\"options\"][i])\n      } : {}), {\n        signature: urlParams[\"signature\"][i]\n      }));\n      transactions.push(plainSignedTransaction);\n    }\n\n    return transactions;\n  }\n\n  static prepareWalletTransaction(transaction) {\n    let plainTransaction = transaction.toPlainObject(); // We adjust the data field, in order to make it compatible with what the web wallet expects.\n\n    if (plainTransaction.data) {\n      plainTransaction.data = Buffer.from(plainTransaction.data, \"base64\").toString();\n    }\n\n    return plainTransaction;\n  }\n\n  buildWalletUrl(options) {\n    const callbackUrl = (options === null || options === void 0 ? void 0 : options.callbackUrl) || window.location.href;\n    const partialQueryString = qs_1.default.stringify(options.params || {});\n    const fullQueryString = partialQueryString ? `${partialQueryString}&callbackUrl=${callbackUrl}` : `callbackUrl=${callbackUrl}`;\n    const url = `${this.baseWalletUrl()}/${options.endpoint}?${fullQueryString}`;\n    return url;\n  }\n\n  baseWalletUrl() {\n    const pathArray = this.walletUrl.split('/');\n    const protocol = pathArray[0];\n    const host = pathArray[2];\n    return protocol + '//' + host;\n  }\n\n}\n\nexports.WalletProvider = WalletProvider;","map":{"version":3,"mappings":"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","names":["WalletProvider","constructor","walletURL","walletUrl","login","options","redirectUrl","buildWalletUrl","endpoint","constants_1","callbackUrl","params","token","redirect","redirectDelayMilliseconds","url","delayMilliseconds","redirectLater","redirectImmediately","window","location","href","Promise","resolve","setTimeout","logout","signTransactions","transactions","jsonToSend","map","tx","plainTx","prepareWalletTransaction","txProp","hasOwnProperty","push","signTransaction","transaction","getTransactionsFromWalletUrl","urlParams","qs_1","parse","search","slice","isTxSignReturnSuccess","getTxSignReturnValue","expectedProps","Array","isArray","errors_1","expectedLength","length","i","plainSignedTransaction","plainSignedTransaction_1","Object","nonce","parseInt","value","receiver","sender","gasPrice","gasLimit","data","chainID","version","signature","plainTransaction","toPlainObject","Buffer","from","toString","partialQueryString","stringify","fullQueryString","baseWalletUrl","pathArray","split","protocol","host","exports"],"sourceRoot":"","sources":["../src/walletProvider.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}