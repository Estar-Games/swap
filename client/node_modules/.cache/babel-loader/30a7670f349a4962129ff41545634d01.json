{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddressValue = exports.AddressType = void 0;\n\nconst address_1 = require(\"../../address\");\n\nconst types_1 = require(\"./types\");\n\nclass AddressType extends types_1.PrimitiveType {\n  constructor() {\n    super(\"Address\");\n  }\n\n  getClassName() {\n    return AddressType.ClassName;\n  }\n\n}\n\nexports.AddressType = AddressType;\nAddressType.ClassName = \"AddressType\";\n/**\n * An address fed to or fetched from a Smart Contract contract, as an immutable abstraction.\n */\n\nclass AddressValue extends types_1.PrimitiveValue {\n  constructor(value) {\n    super(new AddressType());\n    this.value = new address_1.Address(value.bech32());\n  }\n\n  getClassName() {\n    return AddressValue.ClassName;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   *\n   * @param other another AddressValue\n   */\n\n\n  equals(other) {\n    return this.value.equals(other.value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n}\n\nexports.AddressValue = AddressValue;\nAddressValue.ClassName = \"AddressValue\";","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AAEA,MAAaA,WAAb,SAAiCC,qBAAjC,CAA8C;EAG1CC;IACI,MAAM,SAAN;EACH;;EAEDC,YAAY;IACR,OAAOH,WAAW,CAACI,SAAnB;EACH;;AATyC;;AAA9CC;AACWL,wBAAY,aAAZ;AAWX;;;;AAGA,MAAaM,YAAb,SAAkCL,sBAAlC,CAAgD;EAI5CC,YAAYK,KAAZ,EAA2B;IACvB,MAAM,IAAIP,WAAJ,EAAN;IACA,KAAKO,KAAL,GAAa,IAAIC,iBAAJ,CAAYD,KAAK,CAACE,MAAN,EAAZ,CAAb;EACH;;EAEDN,YAAY;IACR,OAAOG,YAAY,CAACF,SAApB;EACH;EAED;;;;;;;EAKAM,MAAM,CAACC,KAAD,EAAoB;IACtB,OAAO,KAAKJ,KAAL,CAAWG,MAAX,CAAkBC,KAAK,CAACJ,KAAxB,CAAP;EACH;;EAEDK,OAAO;IACH,OAAO,KAAKL,KAAZ;EACH;;AAxB2C;;AAAhDF;AACWC,yBAAY,cAAZ","names":["AddressType","types_1","constructor","getClassName","ClassName","exports","AddressValue","value","address_1","bech32","equals","other","valueOf"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/address.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}