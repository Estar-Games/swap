{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringBinaryCodec = void 0;\n\nconst typesystem_1 = require(\"../typesystem\");\n\nconst bytes_1 = require(\"../typesystem/bytes\");\n\nconst bytes_2 = require(\"./bytes\");\n\nclass StringBinaryCodec {\n  constructor() {\n    this.bytesBinaryCodec = new bytes_2.BytesBinaryCodec();\n  }\n\n  decodeNested(buffer) {\n    let [decoded, length] = this.bytesBinaryCodec.decodeNested(buffer);\n    let decodedAsString = new typesystem_1.StringValue(decoded.valueOf().toString());\n    return [decodedAsString, length];\n  }\n\n  decodeTopLevel(buffer) {\n    return new typesystem_1.StringValue(buffer.toString());\n  }\n\n  encodeNested(value) {\n    let valueAsBytes = bytes_1.BytesValue.fromUTF8(value.valueOf());\n    return this.bytesBinaryCodec.encodeNested(valueAsBytes);\n  }\n\n  encodeTopLevel(value) {\n    return Buffer.from(value.valueOf());\n  }\n\n}\n\nexports.StringBinaryCodec = StringBinaryCodec;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAaA,iBAAb,CAA8B;EAA9BC;IACqB,wBAAmB,IAAIC,wBAAJ,EAAnB;EAoBpB;;EAlBGC,YAAY,CAACC,MAAD,EAAe;IACvB,IAAI,CAACC,OAAD,EAAUC,MAAV,IAAoB,KAAKC,gBAAL,CAAsBJ,YAAtB,CAAmCC,MAAnC,CAAxB;IACA,IAAII,eAAe,GAAG,IAAIC,wBAAJ,CAAgBJ,OAAO,CAACK,OAAR,GAAkBC,QAAlB,EAAhB,CAAtB;IACA,OAAO,CAACH,eAAD,EAAkBF,MAAlB,CAAP;EACH;;EAEDM,cAAc,CAACR,MAAD,EAAe;IACzB,OAAO,IAAIK,wBAAJ,CAAgBL,MAAM,CAACO,QAAP,EAAhB,CAAP;EACH;;EAEDE,YAAY,CAACC,KAAD,EAAmB;IAC3B,IAAIC,YAAY,GAAGC,mBAAWC,QAAX,CAAoBH,KAAK,CAACJ,OAAN,EAApB,CAAnB;IACA,OAAO,KAAKH,gBAAL,CAAsBM,YAAtB,CAAmCE,YAAnC,CAAP;EACH;;EAEDG,cAAc,CAACJ,KAAD,EAAmB;IAC7B,OAAOK,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACJ,OAAN,EAAZ,CAAP;EACH;;AApByB;;AAA9BW","names":["StringBinaryCodec","constructor","bytes_2","decodeNested","buffer","decoded","length","bytesBinaryCodec","decodedAsString","typesystem_1","valueOf","toString","decodeTopLevel","encodeNested","value","valueAsBytes","bytes_1","fromUTF8","encodeTopLevel","Buffer","from","exports"],"sourceRoot":"","sources":["../../../src/smartcontracts/codec/string.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}