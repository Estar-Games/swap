{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkStatus = void 0;\n/**\n * An object holding network status configuration parameters.\n */\n\nclass NetworkStatus {\n  constructor() {\n    this.CurrentRound = 0;\n    this.EpochNumber = 0;\n    this.HighestFinalNonce = 0;\n    this.Nonce = 0;\n    this.NonceAtEpochStart = 0;\n    this.NoncesPassedInCurrentEpoch = 0;\n    this.RoundAtEpochStart = 0;\n    this.RoundsPassedInCurrentEpoch = 0;\n    this.RoundsPerEpoch = 0;\n  }\n  /**\n   * Constructs a configuration object from a HTTP response (as returned by the provider).\n   */\n\n\n  static fromHttpResponse(payload) {\n    let networkStatus = new NetworkStatus();\n    networkStatus.CurrentRound = Number(payload[\"erd_current_round\"]);\n    networkStatus.EpochNumber = Number(payload[\"erd_epoch_number\"]);\n    networkStatus.HighestFinalNonce = Number(payload[\"erd_highest_final_nonce\"]);\n    networkStatus.Nonce = Number(payload[\"erd_nonce\"]);\n    networkStatus.NonceAtEpochStart = Number(payload[\"erd_nonce_at_epoch_start\"]);\n    networkStatus.NoncesPassedInCurrentEpoch = Number(payload[\"erd_nonces_passed_in_current_epoch\"]);\n    networkStatus.RoundAtEpochStart = Number(payload[\"erd_round_at_epoch_start\"]);\n    networkStatus.RoundsPassedInCurrentEpoch = Number(payload[\"erd_rounds_passed_in_current_epoch\"]);\n    networkStatus.RoundsPerEpoch = Number(payload[\"erd_rounds_per_epoch\"]);\n    return networkStatus;\n  }\n\n}\n\nexports.NetworkStatus = NetworkStatus;","map":{"version":3,"mappings":";;;;;;AAAA;;;;AAGA,MAAaA,aAAb,CAA0B;EAgDtBC;IACI,KAAKC,YAAL,GAAoB,CAApB;IACA,KAAKC,WAAL,GAAmB,CAAnB;IACA,KAAKC,iBAAL,GAAyB,CAAzB;IACA,KAAKC,KAAL,GAAa,CAAb;IACA,KAAKC,iBAAL,GAAyB,CAAzB;IACA,KAAKC,0BAAL,GAAkC,CAAlC;IACA,KAAKC,iBAAL,GAAyB,CAAzB;IACA,KAAKC,0BAAL,GAAkC,CAAlC;IACA,KAAKC,cAAL,GAAsB,CAAtB;EACH;EAED;;;;;EAGuB,OAAhBC,gBAAgB,CAACC,OAAD,EAAa;IAChC,IAAIC,aAAa,GAAG,IAAIb,aAAJ,EAApB;IAEAa,aAAa,CAACX,YAAd,GAA6BY,MAAM,CAACF,OAAO,CAAC,mBAAD,CAAR,CAAnC;IACAC,aAAa,CAACV,WAAd,GAA4BW,MAAM,CAACF,OAAO,CAAC,kBAAD,CAAR,CAAlC;IACAC,aAAa,CAACT,iBAAd,GAAkCU,MAAM,CAACF,OAAO,CAAC,yBAAD,CAAR,CAAxC;IACAC,aAAa,CAACR,KAAd,GAAsBS,MAAM,CAACF,OAAO,CAAC,WAAD,CAAR,CAA5B;IACAC,aAAa,CAACP,iBAAd,GAAkCQ,MAAM,CAACF,OAAO,CAAC,0BAAD,CAAR,CAAxC;IACAC,aAAa,CAACN,0BAAd,GAA2CO,MAAM,CAACF,OAAO,CAAC,oCAAD,CAAR,CAAjD;IACAC,aAAa,CAACL,iBAAd,GAAkCM,MAAM,CAACF,OAAO,CAAC,0BAAD,CAAR,CAAxC;IACAC,aAAa,CAACJ,0BAAd,GAA2CK,MAAM,CAACF,OAAO,CAAC,oCAAD,CAAR,CAAjD;IACAC,aAAa,CAACH,cAAd,GAA+BI,MAAM,CAACF,OAAO,CAAC,sBAAD,CAAR,CAArC;IAEA,OAAOC,aAAP;EACH;;AA7EqB;;AAA1BE","names":["NetworkStatus","constructor","CurrentRound","EpochNumber","HighestFinalNonce","Nonce","NonceAtEpochStart","NoncesPassedInCurrentEpoch","RoundAtEpochStart","RoundsPassedInCurrentEpoch","RoundsPerEpoch","fromHttpResponse","payload","networkStatus","Number","exports"],"sourceRoot":"","sources":["../src/networkStatus.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}