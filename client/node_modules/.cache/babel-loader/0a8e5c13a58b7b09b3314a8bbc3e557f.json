{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BytesValue = exports.BytesType = void 0;\n\nconst types_1 = require(\"./types\");\n\nclass BytesType extends types_1.PrimitiveType {\n  constructor() {\n    super(\"bytes\");\n  }\n\n  getClassName() {\n    return BytesType.ClassName;\n  }\n\n}\n\nexports.BytesType = BytesType;\nBytesType.ClassName = \"BytesType\";\n\nclass BytesValue extends types_1.PrimitiveValue {\n  constructor(value) {\n    super(new BytesType());\n    this.value = value;\n  }\n\n  getClassName() {\n    return BytesValue.ClassName;\n  }\n  /**\n   * Creates a BytesValue from a utf-8 string.\n   */\n\n\n  static fromUTF8(value) {\n    let buffer = Buffer.from(value, \"utf-8\");\n    return new BytesValue(buffer);\n  }\n  /**\n   * Creates a BytesValue from a hex-encoded string.\n   */\n\n\n  static fromHex(value) {\n    let buffer = Buffer.from(value, \"hex\");\n    return new BytesValue(buffer);\n  }\n\n  getLength() {\n    return this.value.length;\n  }\n  /**\n   * Returns whether two objects have the same value.\n   */\n\n\n  equals(other) {\n    if (this.getLength() != other.getLength()) {\n      return false;\n    }\n\n    return this.value.equals(other.value);\n  }\n\n  valueOf() {\n    return this.value;\n  }\n\n  toString() {\n    return this.value.toString();\n  }\n\n}\n\nexports.BytesValue = BytesValue;\nBytesValue.ClassName = \"BytesValue\";","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA,MAAaA,SAAb,SAA+BC,qBAA/B,CAA4C;EAGxCC;IACI,MAAM,OAAN;EACH;;EAEDC,YAAY;IACR,OAAOH,SAAS,CAACI,SAAjB;EACH;;AATuC;;AAA5CC;AACWL,sBAAY,WAAZ;;AAWX,MAAaM,UAAb,SAAgCL,sBAAhC,CAA8C;EAI1CC,YAAYK,KAAZ,EAAyB;IACrB,MAAM,IAAIP,SAAJ,EAAN;IACA,KAAKO,KAAL,GAAaA,KAAb;EACH;;EAEDJ,YAAY;IACR,OAAOG,UAAU,CAACF,SAAlB;EACH;EAED;;;;;EAGe,OAARI,QAAQ,CAACD,KAAD,EAAc;IACzB,IAAIE,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,OAAnB,CAAb;IACA,OAAO,IAAID,UAAJ,CAAeG,MAAf,CAAP;EACH;EAED;;;;;EAGc,OAAPG,OAAO,CAACL,KAAD,EAAc;IACxB,IAAIE,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,KAAnB,CAAb;IACA,OAAO,IAAID,UAAJ,CAAeG,MAAf,CAAP;EACH;;EAEDI,SAAS;IACL,OAAO,KAAKN,KAAL,CAAWO,MAAlB;EACH;EAED;;;;;EAGAC,MAAM,CAACC,KAAD,EAAkB;IACpB,IAAI,KAAKH,SAAL,MAAoBG,KAAK,CAACH,SAAN,EAAxB,EAA2C;MACvC,OAAO,KAAP;IACH;;IAED,OAAO,KAAKN,KAAL,CAAWQ,MAAX,CAAkBC,KAAK,CAACT,KAAxB,CAAP;EACH;;EAEDU,OAAO;IACH,OAAO,KAAKV,KAAZ;EACH;;EAEDW,QAAQ;IACJ,OAAO,KAAKX,KAAL,CAAWW,QAAX,EAAP;EACH;;AAlDyC;;AAA9Cb;AACWC,uBAAY,YAAZ","names":["BytesType","types_1","constructor","getClassName","ClassName","exports","BytesValue","value","fromUTF8","buffer","Buffer","from","fromHex","getLength","length","equals","other","valueOf","toString"],"sourceRoot":"","sources":["../../../src/smartcontracts/typesystem/bytes.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}