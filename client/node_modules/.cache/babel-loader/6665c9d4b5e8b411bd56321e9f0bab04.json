{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransactionFactory = void 0;\n\nconst tokenTransferBuilders_1 = require(\"./tokenTransferBuilders\");\n\nconst transaction_1 = require(\"./transaction\");\n\nclass TransactionFactory {\n  constructor(gasEstimator) {\n    this.gasEstimator = gasEstimator;\n  }\n\n  createEGLDTransfer(args) {\n    var _a;\n\n    const dataLength = ((_a = args.data) === null || _a === void 0 ? void 0 : _a.length()) || 0;\n    const estimatedGasLimit = this.gasEstimator.forEGLDTransfer(dataLength);\n    return new transaction_1.Transaction({\n      nonce: args.nonce,\n      value: args.value,\n      receiver: args.receiver,\n      sender: args.sender,\n      gasPrice: args.gasPrice,\n      gasLimit: args.gasLimit || estimatedGasLimit,\n      data: args.data,\n      chainID: args.chainID\n    });\n  }\n\n  createESDTTransfer(args) {\n    const transactionPayload = new tokenTransferBuilders_1.ESDTTransferPayloadBuilder().setPayment(args.payment).build();\n    const dataLength = transactionPayload.length() || 0;\n    const estimatedGasLimit = this.gasEstimator.forESDTTransfer(dataLength);\n    return new transaction_1.Transaction({\n      nonce: args.nonce,\n      receiver: args.receiver,\n      sender: args.sender,\n      gasPrice: args.gasPrice,\n      gasLimit: args.gasLimit || estimatedGasLimit,\n      data: transactionPayload,\n      chainID: args.chainID\n    });\n  }\n\n  createESDTNFTTransfer(args) {\n    const transactionPayload = new tokenTransferBuilders_1.ESDTNFTTransferPayloadBuilder().setPayment(args.payment).setDestination(args.destination).build();\n    const dataLength = transactionPayload.length() || 0;\n    const estimatedGasLimit = this.gasEstimator.forESDTNFTTransfer(dataLength);\n    return new transaction_1.Transaction({\n      nonce: args.nonce,\n      receiver: args.sender,\n      sender: args.sender,\n      gasPrice: args.gasPrice,\n      gasLimit: args.gasLimit || estimatedGasLimit,\n      data: transactionPayload,\n      chainID: args.chainID\n    });\n  }\n\n  createMultiESDTNFTTransfer(args) {\n    const transactionPayload = new tokenTransferBuilders_1.MultiESDTNFTTransferPayloadBuilder().setPayments(args.payments).setDestination(args.destination).build();\n    const dataLength = transactionPayload.length() || 0;\n    const estimatedGasLimit = this.gasEstimator.forMultiESDTNFTTransfer(dataLength, args.payments.length);\n    return new transaction_1.Transaction({\n      nonce: args.nonce,\n      receiver: args.sender,\n      sender: args.sender,\n      gasPrice: args.gasPrice,\n      gasLimit: args.gasLimit || estimatedGasLimit,\n      data: transactionPayload,\n      chainID: args.chainID\n    });\n  }\n\n}\n\nexports.TransactionFactory = TransactionFactory;","map":{"version":3,"mappings":"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","names":["TransactionFactory","constructor","gasEstimator","createEGLDTransfer","args","dataLength","data","_a","length","estimatedGasLimit","forEGLDTransfer","transaction_1","nonce","value","receiver","sender","gasPrice","gasLimit","chainID","createESDTTransfer","transactionPayload","tokenTransferBuilders_1","setPayment","payment","build","forESDTTransfer","createESDTNFTTransfer","setDestination","destination","forESDTNFTTransfer","createMultiESDTNFTTransfer","setPayments","payments","forMultiESDTNFTTransfer","exports"],"sourceRoot":"","sources":["../src/transactionFactory.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}