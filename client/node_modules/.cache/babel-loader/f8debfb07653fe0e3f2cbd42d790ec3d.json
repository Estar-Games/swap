{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UserAddress = void 0;\n\nconst bech32 = __importStar(require(\"bech32\"));\n\nconst errors_1 = require(\"./errors\");\n\nconst HRP = \"erd\";\n\nclass UserAddress {\n  constructor(value) {\n    this.value = value;\n  }\n\n  static fromBech32(value) {\n    let decoded;\n\n    try {\n      decoded = bech32.decode(value);\n    } catch (err) {\n      throw new errors_1.ErrBadAddress(value, err);\n    }\n\n    if (decoded.prefix != HRP) {\n      throw new errors_1.ErrBadAddress(value);\n    }\n\n    return new UserAddress(value);\n  }\n\n  bech32() {\n    return this.value;\n  }\n\n}\n\nexports.UserAddress = UserAddress;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAGA,MAAMA,GAAG,GAAG,KAAZ;;AAEA,MAAaC,WAAb,CAAwB;EAGpBC,YAAoBC,KAApB,EAAiC;IAC7B,KAAKA,KAAL,GAAaA,KAAb;EACH;;EAEgB,OAAVC,UAAU,CAACD,KAAD,EAAc;IAC3B,IAAIE,OAAJ;;IAEA,IAAI;MACAA,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcJ,KAAd,CAAV;IACH,CAFD,CAEE,OAAOK,GAAP,EAAiB;MACf,MAAM,IAAIC,sBAAJ,CAAkBN,KAAlB,EAAyBK,GAAzB,CAAN;IACH;;IAED,IAAIH,OAAO,CAACK,MAAR,IAAkBV,GAAtB,EAA2B;MACvB,MAAM,IAAIS,sBAAJ,CAAkBN,KAAlB,CAAN;IACH;;IAED,OAAO,IAAIF,WAAJ,CAAgBE,KAAhB,CAAP;EACH;;EAEDG,MAAM;IACF,OAAO,KAAKH,KAAZ;EACH;;AAzBmB;;AAAxBQ","names":["HRP","UserAddress","constructor","value","fromBech32","decoded","bech32","decode","err","errors_1","prefix","exports"],"sourceRoot":"","sources":["../src/userAddress.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}